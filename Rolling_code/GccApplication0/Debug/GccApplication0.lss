
GccApplication0.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000020  00800100  0000024e  000002c2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000024e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000002e2  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000314  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000060  00000000  00000000  00000354  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000c58  00000000  00000000  000003b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000077f  00000000  00000000  0000100c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000046b  00000000  00000000  0000178b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000b8  00000000  00000000  00001bf8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000412  00000000  00000000  00001cb0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000004e8  00000000  00000000  000020c2  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  000025aa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee e4       	ldi	r30, 0x4E	; 78
  7c:	f2 e0       	ldi	r31, 0x02	; 2
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 32       	cpi	r26, 0x20	; 32
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 0a 01 	call	0x214	; 0x214 <main>
  8e:	0c 94 25 01 	jmp	0x24a	; 0x24a <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <LCD_Command>:
     AinLow = (int)ADCL;                /* Read lower byte*/
     Ain = (int)ADCH*256;           /* Read higher 2 bits and 
                                    Multiply with weight */
    Ain = Ain + AinLow;             
    return(Ain);                    /* Return digital value*/
}
  96:	95 b1       	in	r25, 0x05	; 5
  98:	9f 70       	andi	r25, 0x0F	; 15
  9a:	28 2f       	mov	r18, r24
  9c:	20 7f       	andi	r18, 0xF0	; 240
  9e:	92 2b       	or	r25, r18
  a0:	95 b9       	out	0x05, r25	; 5
  a2:	95 b1       	in	r25, 0x05	; 5
  a4:	9d 7f       	andi	r25, 0xFD	; 253
  a6:	95 b9       	out	0x05, r25	; 5
  a8:	95 b1       	in	r25, 0x05	; 5
  aa:	9b 7f       	andi	r25, 0xFB	; 251
  ac:	95 b9       	out	0x05, r25	; 5
  ae:	95 b1       	in	r25, 0x05	; 5
  b0:	98 60       	ori	r25, 0x08	; 8
  b2:	95 b9       	out	0x05, r25	; 5
  b4:	35 e0       	ldi	r19, 0x05	; 5
  b6:	3a 95       	dec	r19
  b8:	f1 f7       	brne	.-4      	; 0xb6 <LCD_Command+0x20>
  ba:	00 00       	nop
  bc:	95 b1       	in	r25, 0x05	; 5
  be:	97 7f       	andi	r25, 0xF7	; 247
  c0:	95 b9       	out	0x05, r25	; 5
  c2:	ef e1       	ldi	r30, 0x1F	; 31
  c4:	f3 e0       	ldi	r31, 0x03	; 3
  c6:	31 97       	sbiw	r30, 0x01	; 1
  c8:	f1 f7       	brne	.-4      	; 0xc6 <LCD_Command+0x30>
  ca:	00 c0       	rjmp	.+0      	; 0xcc <LCD_Command+0x36>
  cc:	00 00       	nop
  ce:	25 b1       	in	r18, 0x05	; 5
  d0:	f0 e1       	ldi	r31, 0x10	; 16
  d2:	8f 9f       	mul	r24, r31
  d4:	c0 01       	movw	r24, r0
  d6:	11 24       	eor	r1, r1
  d8:	92 2f       	mov	r25, r18
  da:	9f 70       	andi	r25, 0x0F	; 15
  dc:	89 2b       	or	r24, r25
  de:	85 b9       	out	0x05, r24	; 5
  e0:	85 b1       	in	r24, 0x05	; 5
  e2:	88 60       	ori	r24, 0x08	; 8
  e4:	85 b9       	out	0x05, r24	; 5
  e6:	35 e0       	ldi	r19, 0x05	; 5
  e8:	3a 95       	dec	r19
  ea:	f1 f7       	brne	.-4      	; 0xe8 <LCD_Command+0x52>
  ec:	00 00       	nop
  ee:	85 b1       	in	r24, 0x05	; 5
  f0:	87 7f       	andi	r24, 0xF7	; 247
  f2:	85 b9       	out	0x05, r24	; 5
  f4:	8f e3       	ldi	r24, 0x3F	; 63
  f6:	9f e1       	ldi	r25, 0x1F	; 31
  f8:	01 97       	sbiw	r24, 0x01	; 1
  fa:	f1 f7       	brne	.-4      	; 0xf8 <LCD_Command+0x62>
  fc:	00 c0       	rjmp	.+0      	; 0xfe <LCD_Command+0x68>
  fe:	00 00       	nop
 100:	08 95       	ret

00000102 <LCD_Char>:
 102:	95 b1       	in	r25, 0x05	; 5
 104:	9f 70       	andi	r25, 0x0F	; 15
 106:	28 2f       	mov	r18, r24
 108:	20 7f       	andi	r18, 0xF0	; 240
 10a:	92 2b       	or	r25, r18
 10c:	95 b9       	out	0x05, r25	; 5
 10e:	95 b1       	in	r25, 0x05	; 5
 110:	92 60       	ori	r25, 0x02	; 2
 112:	95 b9       	out	0x05, r25	; 5
 114:	95 b1       	in	r25, 0x05	; 5
 116:	9b 7f       	andi	r25, 0xFB	; 251
 118:	95 b9       	out	0x05, r25	; 5
 11a:	95 b1       	in	r25, 0x05	; 5
 11c:	98 60       	ori	r25, 0x08	; 8
 11e:	95 b9       	out	0x05, r25	; 5
 120:	35 e0       	ldi	r19, 0x05	; 5
 122:	3a 95       	dec	r19
 124:	f1 f7       	brne	.-4      	; 0x122 <LCD_Char+0x20>
 126:	00 00       	nop
 128:	95 b1       	in	r25, 0x05	; 5
 12a:	97 7f       	andi	r25, 0xF7	; 247
 12c:	95 b9       	out	0x05, r25	; 5
 12e:	ef e1       	ldi	r30, 0x1F	; 31
 130:	f3 e0       	ldi	r31, 0x03	; 3
 132:	31 97       	sbiw	r30, 0x01	; 1
 134:	f1 f7       	brne	.-4      	; 0x132 <LCD_Char+0x30>
 136:	00 c0       	rjmp	.+0      	; 0x138 <LCD_Char+0x36>
 138:	00 00       	nop
 13a:	25 b1       	in	r18, 0x05	; 5
 13c:	f0 e1       	ldi	r31, 0x10	; 16
 13e:	8f 9f       	mul	r24, r31
 140:	c0 01       	movw	r24, r0
 142:	11 24       	eor	r1, r1
 144:	92 2f       	mov	r25, r18
 146:	9f 70       	andi	r25, 0x0F	; 15
 148:	89 2b       	or	r24, r25
 14a:	85 b9       	out	0x05, r24	; 5
 14c:	85 b1       	in	r24, 0x05	; 5
 14e:	88 60       	ori	r24, 0x08	; 8
 150:	85 b9       	out	0x05, r24	; 5
 152:	35 e0       	ldi	r19, 0x05	; 5
 154:	3a 95       	dec	r19
 156:	f1 f7       	brne	.-4      	; 0x154 <LCD_Char+0x52>
 158:	00 00       	nop
 15a:	85 b1       	in	r24, 0x05	; 5
 15c:	87 7f       	andi	r24, 0xF7	; 247
 15e:	85 b9       	out	0x05, r24	; 5
 160:	8f e3       	ldi	r24, 0x3F	; 63
 162:	9f e1       	ldi	r25, 0x1F	; 31
 164:	01 97       	sbiw	r24, 0x01	; 1
 166:	f1 f7       	brne	.-4      	; 0x164 <LCD_Char+0x62>
 168:	00 c0       	rjmp	.+0      	; 0x16a <LCD_Char+0x68>
 16a:	00 00       	nop
 16c:	08 95       	ret

0000016e <LCD_String>:
 16e:	0f 93       	push	r16
 170:	1f 93       	push	r17
 172:	cf 93       	push	r28
 174:	df 93       	push	r29
 176:	8c 01       	movw	r16, r24
 178:	c0 e0       	ldi	r28, 0x00	; 0
 17a:	d0 e0       	ldi	r29, 0x00	; 0
 17c:	03 c0       	rjmp	.+6      	; 0x184 <LCD_String+0x16>
 17e:	0e 94 81 00 	call	0x102	; 0x102 <LCD_Char>
 182:	21 96       	adiw	r28, 0x01	; 1
 184:	f8 01       	movw	r30, r16
 186:	ec 0f       	add	r30, r28
 188:	fd 1f       	adc	r31, r29
 18a:	80 81       	ld	r24, Z
 18c:	81 11       	cpse	r24, r1
 18e:	f7 cf       	rjmp	.-18     	; 0x17e <LCD_String+0x10>
 190:	df 91       	pop	r29
 192:	cf 91       	pop	r28
 194:	1f 91       	pop	r17
 196:	0f 91       	pop	r16
 198:	08 95       	ret

0000019a <LCD_goto_xy>:
 19a:	81 11       	cpse	r24, r1
 19c:	08 c0       	rjmp	.+16     	; 0x1ae <LCD_goto_xy+0x14>
 19e:	60 31       	cpi	r22, 0x10	; 16
 1a0:	30 f4       	brcc	.+12     	; 0x1ae <LCD_goto_xy+0x14>
 1a2:	86 2f       	mov	r24, r22
 1a4:	8f 70       	andi	r24, 0x0F	; 15
 1a6:	80 68       	ori	r24, 0x80	; 128
 1a8:	0e 94 4b 00 	call	0x96	; 0x96 <LCD_Command>
 1ac:	08 95       	ret
 1ae:	81 30       	cpi	r24, 0x01	; 1
 1b0:	39 f4       	brne	.+14     	; 0x1c0 <LCD_goto_xy+0x26>
 1b2:	60 31       	cpi	r22, 0x10	; 16
 1b4:	28 f4       	brcc	.+10     	; 0x1c0 <LCD_goto_xy+0x26>
 1b6:	86 2f       	mov	r24, r22
 1b8:	8f 70       	andi	r24, 0x0F	; 15
 1ba:	80 6c       	ori	r24, 0xC0	; 192
 1bc:	0e 94 4b 00 	call	0x96	; 0x96 <LCD_Command>
 1c0:	08 95       	ret

000001c2 <LCD_Init>:
 1c2:	2f ef       	ldi	r18, 0xFF	; 255
 1c4:	89 ef       	ldi	r24, 0xF9	; 249
 1c6:	90 e0       	ldi	r25, 0x00	; 0
 1c8:	21 50       	subi	r18, 0x01	; 1
 1ca:	80 40       	sbci	r24, 0x00	; 0
 1cc:	90 40       	sbci	r25, 0x00	; 0
 1ce:	e1 f7       	brne	.-8      	; 0x1c8 <LCD_Init+0x6>
 1d0:	00 c0       	rjmp	.+0      	; 0x1d2 <LCD_Init+0x10>
 1d2:	00 00       	nop
 1d4:	82 e0       	ldi	r24, 0x02	; 2
 1d6:	0e 94 4b 00 	call	0x96	; 0x96 <LCD_Command>
 1da:	88 e2       	ldi	r24, 0x28	; 40
 1dc:	0e 94 4b 00 	call	0x96	; 0x96 <LCD_Command>
 1e0:	8c e0       	ldi	r24, 0x0C	; 12
 1e2:	0e 94 4b 00 	call	0x96	; 0x96 <LCD_Command>
 1e6:	86 e0       	ldi	r24, 0x06	; 6
 1e8:	0e 94 4b 00 	call	0x96	; 0x96 <LCD_Command>
 1ec:	81 e0       	ldi	r24, 0x01	; 1
 1ee:	0e 94 4b 00 	call	0x96	; 0x96 <LCD_Command>
 1f2:	2f ef       	ldi	r18, 0xFF	; 255
 1f4:	83 ec       	ldi	r24, 0xC3	; 195
 1f6:	99 e0       	ldi	r25, 0x09	; 9
 1f8:	21 50       	subi	r18, 0x01	; 1
 1fa:	80 40       	sbci	r24, 0x00	; 0
 1fc:	90 40       	sbci	r25, 0x00	; 0
 1fe:	e1 f7       	brne	.-8      	; 0x1f8 <LCD_Init+0x36>
 200:	00 c0       	rjmp	.+0      	; 0x202 <LCD_Init+0x40>
 202:	00 00       	nop
 204:	08 95       	ret

00000206 <ADC_Init>:
 206:	87 e8       	ldi	r24, 0x87	; 135
 208:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 20c:	80 e4       	ldi	r24, 0x40	; 64
 20e:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
 212:	08 95       	ret

00000214 <main>:

int main(void)
{
	LCD_Dir = 0xFF;
 214:	8f ef       	ldi	r24, 0xFF	; 255
 216:	84 b9       	out	0x04, r24	; 4
	LCD_Init();
 218:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <LCD_Init>
	ADC_Init();
 21c:	0e 94 03 01 	call	0x206	; 0x206 <ADC_Init>
	LCD_String("Lux Meter LDR:");
 220:	80 e0       	ldi	r24, 0x00	; 0
 222:	91 e0       	ldi	r25, 0x01	; 1
 224:	0e 94 b7 00 	call	0x16e	; 0x16e <LCD_String>
	LCD_goto_xy(1,0);
 228:	60 e0       	ldi	r22, 0x00	; 0
 22a:	81 e0       	ldi	r24, 0x01	; 1
 22c:	0e 94 cd 00 	call	0x19a	; 0x19a <LCD_goto_xy>
	LCD_String("Intensity:    lx");
 230:	8f e0       	ldi	r24, 0x0F	; 15
 232:	91 e0       	ldi	r25, 0x01	; 1
 234:	0e 94 b7 00 	call	0x16e	; 0x16e <LCD_String>
	while(1)
	{
		LCD_goto_xy(1,11);
 238:	6b e0       	ldi	r22, 0x0B	; 11
 23a:	81 e0       	ldi	r24, 0x01	; 1
 23c:	0e 94 cd 00 	call	0x19a	; 0x19a <LCD_goto_xy>
		LCD_String("");
 240:	8e e0       	ldi	r24, 0x0E	; 14
 242:	91 e0       	ldi	r25, 0x01	; 1
 244:	0e 94 b7 00 	call	0x16e	; 0x16e <LCD_String>
 248:	f7 cf       	rjmp	.-18     	; 0x238 <main+0x24>

0000024a <_exit>:
 24a:	f8 94       	cli

0000024c <__stop_program>:
 24c:	ff cf       	rjmp	.-2      	; 0x24c <__stop_program>
